/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.kevin.androidffmpegplayer.jni;

public class FFmpegDecoder {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected FFmpegDecoder(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FFmpegDecoder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        KxFFmpegJNI.delete_FFmpegDecoder(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void start() {
    KxFFmpegJNI.FFmpegDecoder_start(swigCPtr, this);
  }

  public boolean isStart() {
    return KxFFmpegJNI.FFmpegDecoder_isStart(swigCPtr, this);
  }

  public void stop() {
    KxFFmpegJNI.FFmpegDecoder_stop(swigCPtr, this);
  }

  public void reset() {
    KxFFmpegJNI.FFmpegDecoder_reset(swigCPtr, this);
  }

  public int dequeueInputBuffer() {
    return KxFFmpegJNI.FFmpegDecoder_dequeueInputBuffer(swigCPtr, this);
  }

  public void queueInputBuffer(int index, java.nio.ByteBuffer data_from, int data_len, long pts) {
    KxFFmpegJNI.FFmpegDecoder_queueInputBuffer(swigCPtr, this, index, data_from, data_len, pts);
  }

  public int dequeueOutputBuffer(BufferInfo bufferInfo) {
    return KxFFmpegJNI.FFmpegDecoder_dequeueOutputBuffer(swigCPtr, this, BufferInfo.getCPtr(bufferInfo), bufferInfo);
  }

  public void releaseOutputBuffer(int index) {
    KxFFmpegJNI.FFmpegDecoder_releaseOutputBuffer(swigCPtr, this, index);
  }

  public void configureFromJava(java.lang.Object surface, AVCodecID codecId) {
    KxFFmpegJNI.FFmpegDecoder_configureFromJava(swigCPtr, this, surface, codecId.swigValue());
  }

  public FFmpegDecoder() {
    this(KxFFmpegJNI.new_FFmpegDecoder(), true);
  }

}
